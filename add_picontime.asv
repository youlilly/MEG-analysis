% f_name = input('please type the name of the .mat file that you wish to add trigger information to\n','s');
%  block = input('please type the block number\n','s');


%%%%%%%%%%%%the output could be found in picevents and greebevents,and also
%%%%%%%%%%%%can be foun

event = ['event',num2str(aeblock),'.txt'];
%event = ['event',block,'.txt'];
evnet2 = [];
load (filename_apl); %after calling the previous megload function, the data was not cleared out, so file_name3 is the same as megload:spm_XXX.mat file
event2 = load (event);
f_name_apl = filename_apl;

codes = event2(1:length(event2),2); %event type
times = event2(1:length(event2),1);

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
D.diftrials = [];
D.diftrials.eventsall = [];
D.diftrials.eventspic = [];
D.diftrials.eventsgre = [];

%%%%%%%%%%%%%%%%%%%%%%%%%%%  original trial events  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
D.diftrials.eventsall = repmat(struct('type',1,'value',1,'time',1,'duration',''), 1, length(times)); %this result could also be found in D.trial.events
%repmat(struct.......)
    %ans =
    %         type: 1  %need to add events type
    %        value: 1
    %         time: 1  %need to add events time
    %     duration: ''                                    %repeated as 1*length(times) times

for it=1:length(times)
D.diftrials.eventsall(it).time=times(it,1)/1000; %convert ms to sec
D.diftrials.eventsall(it).type=num2str(codes(it,1));
end

%%%%%%%%%%%%%%%%%%%%%find triggers only for type 32 %%%%%%%%%%%%%%%%%%%%%%%%
codes1 = [];
times1 = [];
event3 = [];

for t = 1:length(event2)
    if codes(t) == 32
        codes1 = [codes1; codes(t)];       %pic & greeble triggers codes         
        times1 = [times1; times(t)];       %pic & greeble triggers times 
    end
end
event3 =  [codes1, times1];       %pic & greeble event should be a 300-by-2 matrix including pic and greeble events
megtnum = length(event3);

%%%%%%%%%%%%%%%%%%%%%%Add info into pic & Greeble events %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%%%%%%%%%%%%% Normal MEG data would have 300 events for each block%%%%%%%%%%%%%% %%%%%%%%%%%
if megtnum == 300 
    onumevents = [];  %pic triggers
    enumevents = [];  %Greeble triggers
    onumcodes = [];
    onumtimes = [];
    enumcodes = [];
    enumtimes = [];
    onumcodes = codes1(1:2:end,:);
    onumtimes = times1(1:2:end,:);
    onumevents = [onumcodes, onumtimes]; %find triggers only for pic triggers %the odd number triggers %%%%%%%%%%%%%%%%%%%%%%
    enumcodes = codes1(2:2:end,:);
    enumtimes = times1(2:2:end,:);
    enumevents = [enumcodes, enumtimes]; %find triggers only for greeble triggers %the even number triggers%%%%%%%%%%%%%%%%%%
        
    D.diftrials.eventspic = repmat(struct('type',1,'value',1,'time',1,'duration','','label',1,'picontime',1), 1, length(onumtimes));  
    %for greeble triggers
    D.diftrials.eventsgre = repmat(struct('type',1,'value',1,'time',1,'duration','','label',1,'greontime',1), 1, length(enumtimes));   
    %for photodiode triggers
    
    
    eval(['load SFG_block' num2str(z) '_sub' num2str(bsub) '_timeinfo.mat;']); %load pic info
    picevents = zeros(150,6); %This variable defined here, cause don't know what kind of format you want the data be displayed
    for it = 1: length(onumtimes)
        D.diftrials.eventspic(it).label=trialarray_time(it,2);
        D.diftrials.eventspic(it).picontime=trialarray_time(it,3)/1000;
        D.diftrials.eventspic(it).time=onumtimes(it,1)/1000; %convert ms to sec
        D.diftrials.eventspic(it).type=num2str(onumcodes(it,1));
        
        picevents(it,1) = onumcodes(it,1);
        picevents(it,2) = 1;  %what's that value ''
        picevents(it,3) = onumtimes(it,1)/1000;
        %picevents(it,4) =  %do we need to count the duration:actually I don't know what does it made for, picon? 
        picevents(it,5) = trialarray_time(it,2);
        picevents(it,6) = trialarray_time(it,3)/1000;
    end
    
    eval(['load SFG_block' num2str(z) '_sub' num2str(bsub) '_Greebtimeinfo.mat;']); %load greeble info
    greebevents = zeros(150,6);
    for it = 1: length(enumtimes)
        D.diftrials.eventsgre(it).label=trialarray_Greebtime(it,2);
        D.diftrials.eventsgre(it).greontime=trialarray_Greebtime(it,3)/1000;
        D.diftrials.eventsgre(it).time=enumtimes(it,1)/1000; %convert ms to sec
        D.diftrials.eventsgre(it).type=num2str(enumcodes(it,1));
        
        greebevents(it,1) = onumcodes(it,1);
        greebevents(it,2) = 1; 
        greebevents(it,3) = onumtimes(it,1)/1000;
        %greebevents(it,4) =  %do we need to count the duration:actually I don't know what does it made for, picon? 
        greebevents(it,5) = trialarray_Greebtime(it,2);
        greebevents(it,6) = trialarray_Greebtime(it,3)/1000;
    end
end   
%%%%%%%%%%%%%% Abnormal MEG data would have more than 300 events for each block%%%%%%%%%%%%%% %%%%%%%%%%%
% elseif  
%     finddif = sprintf('num2str(filename_apl)','has different numbers of triggers');
%     cdif = [];
%     
%     for mn = 1:length(megtnum)
%         mdif = event3(mn,2)-event3(1,2);
%         cdif = trialarray_time(mn,3)-trialarray_time(1,3);
%         
%         
%         Tm = length(megtnum);  
%     end
% 
% % codes1 = [];
% % times1 = [];
% % event3 = [];
% % 
% % for t = 1:length(event2)
% %     if codes(t) == 32
% %         codes1 = [codes1; codes(t)];       %pic & greeble triggers codes         
% %         times1 = [times1; times(t)];       %pic & greeble triggers times 
% %     end
% % end
% % event3 =  [codes1, times1];       %pic & greeble event should be a 300-by-2 matrix including pic and greeble events
% 
%     
%     
%     
% elseif  megtnum < 300
%     
% end   
    
   
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

save (filename_apl, 'D');
% save(savefile, 'v1')  % Use when filename is stored in a variable
clear D;





